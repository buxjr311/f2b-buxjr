name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Run tests
      run: cargo test --verbose

  build:
    name: Build and Package
    runs-on: ubuntu-20.04
    needs: test
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Install cargo-deb
      run: cargo install cargo-deb
      
    - name: Build release binary with static linking
      run: |
        # Add static linking flags for better compatibility
        export RUSTFLAGS="-C target-feature=+crt-static"
        cargo build --release --verbose
      
    - name: Create .deb package
      run: cargo deb --no-build --verbose
      
    - name: List generated files
      run: |
        echo "Generated .deb package:"
        find target/debian -name "*.deb" -ls
        echo "Package contents:"
        dpkg-deb --contents target/debian/*.deb
        
    - name: Upload .deb as artifact (for main branch)
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: f2b-buxjr-deb-package
        path: target/debian/*.deb
        retention-days: 30
        
    - name: Upload .deb to release (for releases)
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: target/debian/f2b-buxjr_${{ github.event.release.tag_name }}_amd64.deb
        asset_name: f2b-buxjr_${{ github.event.release.tag_name }}_amd64.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload .deb to latest release (for version changes)
      if: github.ref == 'refs/heads/main'
      run: |
        # Get the current version from Cargo.toml
        VERSION=$(grep '^version = ' Cargo.toml | cut -d'"' -f2)
        echo "Current version: $VERSION"
        
        # Check if a release exists for this version
        if gh release view "v$VERSION" >/dev/null 2>&1; then
          echo "Release v$VERSION exists, uploading .deb file..."
          
          # Find the generated .deb file
          DEB_FILE=$(find target/debian -name "*.deb" -type f | head -1)
          if [ -n "$DEB_FILE" ]; then
            echo "Uploading $DEB_FILE to release v$VERSION"
            gh release upload "v$VERSION" "$DEB_FILE" --clobber
            echo "✅ Successfully uploaded .deb to release v$VERSION"
          else
            echo "❌ No .deb file found in target/debian"
            exit 1
          fi
        else
          echo "No release found for v$VERSION, skipping upload"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}